# -*- coding: utf-8 -*-
"""井字.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1XVlrcDPFQcOV3oJnZje-0vX5K65iT7xP
"""

#def single():#單人遊玩
#  board=[[1,2,3],[4,5,6],[7,8,9]]
#  win=0
#  pla=input('輸入位置').split()

def multiple():#雙人遊玩
#  win=0
#  for i in range(9):
#    if(win)>0:
#      return(win)
#      break
#    pla_1=input('玩家一輸入位置').split()
#    board[pla_1[0]][pla_1[1]]='Ⅹ'
#    pla_2=input('玩家二輸入位置').split()
#    board[pla_2[0]][pla_2[1]]='〇'
  board=[['＊' for i in range(3)] for j in range(3)]
  player_type='Ⅹ'
  player_num=0
  winner_type='＊'
  winner_num=None

  while True:
    if player_type=='Ⅹ':
      player_num=1
    else:
      player_num=2
    print_board(board)

    to_check_location=input('玩家{0}，請選擇位置 x,y ( 0<=x<=2 , 0<=y<=2 ):'.format(player_num))
    while check_location(to_check_location):
      print()
      print('請參照格式 x,y ')
      to_check_location=input('玩家{0}，請選擇位置 x,y ( 0<=x<=2 , 0<=y<=2 ):'.format(player_num))
    location=[int(i)for i in to_check_location.split(',')]

    if (location[0]>2)or(location[0]<0)or(location[1]>2)or(location[1]<0):
      print()
      print('超出範圍，請重新選擇')
    elif board[abs(location[1]-2)][location[0]]=='＊':

      board[abs(location[1]-2)][location[0]]=player_type

      winner_type=check_winner(board)
      if winner_type=='Ⅹ':
        winner_num=1
      elif winner_type=='〇':
        winner_num=2

      if winner_num:
        print_board(board)
        print("玩家{0}獲勝！恭喜！".format(winner_num))
        break

      if check_board(board):
        print_board(board)
        print("遊戲結束，平手！")
        break

      if player_type=='Ⅹ':
        player_type='〇'
      else:
        player_type='Ⅹ'

    else:
      print("此位置已經被選擇，請選擇其他位置。")

def print_board(board):#印出版面
  for i in range(3):
    for j in range(3):
      print(board[i][j],end=' ')
      if j<2:
        print("|",end=' ')
    if i<2:
      print()
      print("-"*12)
      print()
  print()

def check_location(to_check_location):#檢查輸入是否有不正確標點符號
  return not(','in to_check_location)

def check_winner(board):#檢查是否有人勝出
    for i in range(3):
        if board[i][0]==board[i][1]==board[i][2]!='＊':
            return board[i][0]
        if board[0][i]==board[1][i]==board[2][i]!='＊':
            return board[0][i]
    if board[0][0]==board[1][1]==board[2][2]!='＊':
        return board[0][0]
    if board[0][2]==board[1][1]==board[2][0]!='＊':
        return board[0][2]
    return None

def check_board(board):#檢查是否滿版
    for t in board:
      for c in t:
        if c=='＊':
          return False
    return True

print('〇Ⅹ〇Ⅹ〇Ⅹ〇Ⅹ〇Ⅹ〇Ⅹ')
print()
print('※基本規則1:先連成一線的贏')
print('ex.')
print('〇＊＊')
print('＊〇＊')
print('＊＊〇')
print('則〇勝利')
print()
print('※基本規則2:位置表示法')
print('            ↙這個位置為1,2')
print('        ＊〇＊')
print('        ＊＊Ⅹ←這個位置為2,1')
print('        〇＊＊')
print('          ↖這個位置為0,0')
print()
print('Ⅹ〇Ⅹ〇Ⅹ〇Ⅹ〇Ⅹ〇Ⅹ〇')
print()

#people_count=int(input('單人:1 ；多人:2    :'))
#board = [[' ' for i in range(3)] for j in range(3)]

#while not(people_count==1 or people_count==2):
#  print('請輸入正確數值')
#  people_count=int(input('單人:1 ；多人:2    :'))

#while people_count!=2:
#  print('架設中')
#  people_count=int(input('請輸入2'))

#if people_count==1:
#  single
#else:
#  multiple
#print('．‧·○×Ⅹ◎◆＊*╴°')
multiple()